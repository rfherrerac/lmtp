% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/estimators.R
\name{lmtp_tmle}
\alias{lmtp_tmle}
\title{LMTP Targeted Maximum Likelihood Estimator}
\usage{
lmtp_tmle(
  data,
  trt,
  outcome,
  nodes,
  baseline = NULL,
  cens = NULL,
  k = Inf,
  shift,
  bounds = NULL,
  learners_outcome = NULL,
  learners_trt = NULL,
  folds = 10,
  bound = 1e-05
)
}
\arguments{
\item{data}{A data frame in wide format containing all necessary variables
for the estimation problem.}

\item{trt}{A vector containing the column names of treatment variables ordered by time.}

\item{outcome}{The column name of the outcome variable. In the case of time-to-event
analysis, a vector containing the columns names of intermediate outcome variables and the final
outcome variable ordered by time. Only numeric values are allowed. If the outcome type
is binary, data should be coded as 0 and 1.}

\item{nodes}{A list the same length as the number of time points of observation with
the column names for new time-varying covariates introduced at each time point. The list
should be ordered following the time ordering of the model. Must be provided, even
if no time-varying covariates exist. In the case of a point-treatment, should be set
to \code{list(c(NULL))}. If time-to-event with a time-invariant exposure,
\code{nodes} should be the same length as the number of intermediate outcome variables
with each index of the list similiarly set to \code{NULL}. See examples for demonstration.}

\item{baseline}{An optional vector of columns names of baseline covariates to be
included for adjustment at every timepoint.}

\item{cens}{An optional vector of column names of censoring indicators the same
length as \code{nodes}. If missingness in the outcome is present, must be provided.}

\item{k}{An integer specifying how many previous time points should be
used for estimation at the given time point. Default is \code{Inf},
all time points.}

\item{shift}{A function that specifies how treatment variables should be shifted. See examples
for how to specify shift functions for continuous, binary, and categorical exposures.}

\item{bounds}{An optional vector of the bounds for continuous outcomes. If \code{NULL},
the bounds will be taken as the minimum and maximum of the observed data.
Should be left as \code{NULL} if the outcome type is binary.}

\item{learners_outcome}{An \code{sl3} learner stack for estimation of the outcome
regression. If not specified, will default to an ensemble of an intercept only model
and a GLM.}

\item{learners_trt}{An \code{sl3} learner stack for estimation of the exposure
mechanism. If not specified, will default to an ensemble of an intercept only model
and a GLM.}

\item{folds}{The number of folds to be used for cross-fitting. Minimum allowable number
is two folds.}

\item{bound}{Determines that maximum and minimum values (scaled) predictions
will be bounded by. The default is 1e-5, bounding predictions by 1e-5 and 0.9999.}
}
\value{
A list of class \code{lmtp} containing the following components:

\item{estimator}{The estimator used, in this case "TMLE".}
\item{theta}{The estimated population LMTP effect.}
\item{standard_error}{The estimated standard error of the LMTP effect.}
\item{low}{Lower bound of the 95\% confidence interval of the LMTP effect.}
\item{high}{Upper bound of the 95\% confidene interval of the LMTP effect.}
\item{eif}{The estimated, uncentered, influence function of the estimate.}
\item{shift}{The shift function specifying the treatment policy of interest.}
\item{weights_m}{A list the same length as \code{folds}, containing the Super Learner
ensemble weights at each time-point for each fold for the outcome regression.}
\item{weights_r}{A list the same length as \code{folds}, containing the Super Learner
ensemble weights at each time-point for each fold for the propensity.}
\item{outcome_type}{The outcome variable type.}
}
\description{
Targeted maximum likelihood estimator for the effects of traditional causal effects and
modified treatment policies for both point treatment and longitudinal data with binary,
continuous, or time-to-event outcomes. Supports binary, categorical, and continuous exposures.
}
\examples{
\dontrun{

  library(lmtp)

  # Example 1.1
  # Point treatment, continuous exposure, continuous outcome, no loss-to-follow-up
  # Interested in the effect of a population wide decrease in A of 5 units
  # The true value under this intervention is about 519.
  set.seed(56)
  n <- 1000
  W <- rnorm(n, 10, 5)
  A <- 23 + 5*W + rnorm(n)
  Y <- 7.2*A + 3*W + rnorm(n)
  ex1_dat <- data.frame(W, A, Y)
  d <- function(x) x - 5
  psi1.1 <- lmtp_tmle(ex1_dat, "A", "Y", list(c("W")), shift = d,
                      outcome_type = "continuous", folds = 2)
  psi1.1

  # Example 1.2
  # Point treatment, continuous exposure, continuous outcome, no loss-to-follow-up
  # Interesed in the effect of a modified treatment policy where A is decreased by 15
  # units only among observations whose observed A was above 80.
  # The true value under this intervention is about 513.
  d <- function(x) (x > 80)*(x - 15) + (x <= 80)*x
  psi1.2 <- lmtp_tmle(ex1_dat, "A", "Y", list(c("W")), shift = d,
                      outcome_type = "continuous", folds = 2)
  psi1.2

  # Example 2.1
  # Longitudinal setting, time-varying continuous exposure bounded by 0,
  # time-varying covariates, and a binary outcome with no loss-to-follow-up.
  # Interested in the effect of a treatment policy where exposure decreases by
  # one unit at every time point if an observations observed exposure is greater
  # than or equal to 2. The true value under this intervention is about 0.305.
  head(sim_t4)
  # specifying treament variables
  a <- c("A_1", "A_2", "A_3", "A_4")
  # specifying time varying covariates
  time_varying <- list(c("L_1"), c("L_2"), c("L_3"), c("L_4"))
  # treatment policy function to be applied at all time points
  d <- function(a) {
    (a - 1) * (a - 1 >= 1) + a * (a - 1 < 1)
  }
  progressr::with_progress({
    psi2.1 <- lmtp_tmle(sim_t4, a, "Y", time_varying, shift = d, folds = 2)
  })
  psi2.1

  # Example 2.2
  # Example 2.1 assumed that the outcome (as well as the treatment variables)
  # were directly affected by all other nodes in the past. In certain situtations,
  # domain specific knowledge may suggest otherwise leading to a Markov processes.
  # This can be controlled using the k argument.
  progressr::with_progress({
    psi2.2 <- lmtp_tmle(sim_t4, a, "Y", time_varying, shift = d,
                        k = 1, folds = 2)
  })
  psi2.2

  # Example 2.3
  # Using the same data as examples 2.1 and 2.3, but now treating the exposure
  # as an ordered categorical variable. To account for the exposure being a
  # factor we just need to modify the shift function (and the original data)
  # so as to respect this.
  for (i in a) {
    sim_t4[[i]] <- factor(sim_t4[[i]], levels = 0:5, ordered = T)
  }

  d <- function(a) {
    out <- list()
    for (i in 1:length(a)) {
      if (as.character(a[i]) \%in\% c("0", "1")) {
        out[[i]] <- as.character(a[i])
      } else {
        out[[i]] <- as.numeric(as.character(a[i])) - 1
      }
    }
    factor(unlist(out), levels = 0:5, ordered = T)
  }

  progressr::with_progress({
    psi2.3 <- lmtp_tmle(sim_t4, a, "Y", time_varying, shift = d, folds = 2)
  })
  psi2.3

  # Example 3.1
  # Longitudinal setting, time-varying binary treatment, time-varying covariates
  # and baseline covariates with no loss-to-follow-up. Interested in a traditional
  # causal effect where treatment is set to 1 at all time points for all observations.
  data("iptwExWide", package = "twang")
  a <- paste0("tx", 1:3)
  baseline <- c("gender", "age")
  nodes <- list(c("use0"), c("use1"), c("use2"))
  progressr::with_progress({
    psi3.1 <-
      lmtp_tmle(iptwExWide, a, "outcome", nodes, baseline = baseline,
                shift = function(x) 1, outcome_type = "continuous",
                folds = 2)
  })
  psi3.1

  # Example 4.1
  # Longitudinal setting, time-varying continuous treatment, time-varying covariates,
  # binary outcome with right censoring. Interested in the mean population outcome under
  # the observed exposures in a hypothetical population with no loss-to-follow-up.
  head(sim_cens)
  a <- c("A1", "A2")
  nodes <- list(c("L1"), c("L2"))
  cens <- c("C1", "C2")
  y <- "Y"
  psi4.1 <- lmtp_tmle(sim_cens, a, y, nodes, cens = cens, shift = NULL, folds = 2)
  psi4.1

  # Example 4.2
  # Using the same data as example 4.1, but now interested in the causal effect of a
  # treatment policy where exposure increased by 0.5 units at all time points. The
  # true value under this intervention is about 0.88.
  d <- function(x) x + 0.5
  psi4.2 <- lmtp_tmle(sim_cens, a, y, nodes, cens = cens, shift = d, folds = 2)
  psi4.2

  # Example 5.1
  # Time-to-event analysis with a binary time-invariant exposure. Interested in
  # the effect of treatment being given to all observations on the cumulative
  # incidence of our time-to-event outcome.
  a <- "trt"
  # for a survival problem, the outcome arugment now takes a vector of outcomes
  # if an observation experiences the event prior to the end of follow-up, all future
  # outcome nodes should be set to 1 (i.e., last observation carried forward).
  y <- paste0("N1.", 0:6)
  cens <- paste0("C.", 0:5)
  baseline <- c("W1", "W2")
  # even if there are no time varying covariates, we still provide a list the same
  # length as the number of time points, but with items specified as NULL.
  nodes <- lapply(0:5, function(x) NULL)
  progressr::with_progress({
    psi5.1 <- lmtp_tmle(sim_point_surv, a, y, nodes, baseline, cens,
                        shift = function(x) 1, folds = 2)
  })
  psi5.1

}
}
